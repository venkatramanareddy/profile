{"version":3,"sources":["Terminal.jsx","App.js","reportWebVitals.js","index.js"],"names":["uniqueRowId","Terminal","props","onKeyDown","bind","initialPromptData","state","rowData","promptItemList","map","element","createRowElement","customStyle","event","key","target","value","this","setState","getCorrespondingCommandOutput","updatePrompt","preventDefault","matchingCommand","getClosestMatchingCommandName","partialInput","resp","responseList","commandList","length","commandItem","find","o","command","startsWith","inputCommand","id","matchingResult","Object","assign","type","data","response","colorPallete","onThemeChange","hasOwnProperty","colorData","initialStyle","updatedList","push","updatedPromptItemList","disclaimer","defaultColor","color","scrollToBottom","el","scrollIntoView","behaviour","ref","className","style","onSubmit","autoFocus","React","Component","responses","href","rel","icon","faGithub","fixedWidth","faExternalLinkAlt","faStackOverflow","faCodepen","faHome","error","App","Helmet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bb3af01.chunk.js","sourcesContent":["import React from 'react';\r\nimport './terminal.css';\r\n\r\nconst defaultErrorResponse = \"Looks like your trying something which I cannot answer, try asking for help\";\r\nlet uniqueRowId = 0;    \r\n\r\nfunction getUniqueRowId(){\r\n    uniqueRowId++;\r\n    return uniqueRowId;\r\n}\r\n\r\nclass Terminal extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        let initialPromptData = [];\r\n        let initialStyle = {};\r\n        \r\n        this.state = {\r\n            rowData: initialPromptData,\r\n            promptItemList: initialPromptData.map((element) => this.createRowElement(element)),\r\n            customStyle: initialStyle\r\n        }\r\n    }\r\n\r\n    onKeyDown(event){\r\n        if(event.key === 'Enter'){\r\n            // Process the command \r\n            if(event.target.value == null || event.target.value === \"\"){\r\n                return;\r\n            }\r\n            if(event.target.value === \"clear\" || event.target.value === \"cls\"){\r\n                this.setState({\r\n                    rowData: [],\r\n                    promptItemList: []\r\n                });\r\n            }\r\n            else{\r\n                // check if we have corresponding command\r\n                let rowData = this.getCorrespondingCommandOutput(event.target.value);\r\n                if(rowData != null){\r\n                    this.updatePrompt(rowData);\r\n                }\r\n            }\r\n            event.preventDefault();\r\n\r\n            // cleanup input box\r\n            event.target.value = \"\";\r\n        }\r\n        if(event.key === 'Tab'){\r\n            //autocomplete logic\r\n            if(event.target.value == null || event.target.value === \"\"){\r\n                return;\r\n            }\r\n            event.preventDefault();\r\n            let matchingCommand = this.getClosestMatchingCommandName(event.target.value);\r\n            if( matchingCommand != null ){\r\n                event.target.value = matchingCommand;\r\n            }\r\n        }\r\n    }\r\n\r\n    getClosestMatchingCommandName(partialInput){\r\n        let resp = partialInput;\r\n        if(this.props.responseList.commandList != null \r\n            && this.props.responseList.commandList.length >= 0){\r\n                let commandItem = this.props.responseList.commandList.find(o=> o.command.startsWith(partialInput));\r\n                if(commandItem != null){\r\n                    resp = commandItem.command\r\n                }\r\n        }\r\n        return resp;\r\n    }\r\n\r\n    getCorrespondingCommandOutput(inputCommand){\r\n        let rowData = {id: getUniqueRowId()}\r\n        if(this.props.responseList.commandList != null \r\n            && this.props.responseList.commandList.length >= 0){\r\n            let matchingResult = this.props.responseList.commandList.find(o=> o.command === inputCommand)\r\n            if(matchingResult != null){\r\n                Object.assign(rowData,{        \r\n                    type: \"generalResponse\",\r\n                    data: matchingResult.response\r\n                });\r\n                return rowData;\r\n            }\r\n        }\r\n\r\n        if(this.props.responseList.colorPallete != null \r\n            && this.props.responseList.colorPallete.length >= 0){\r\n            let matchingResult = this.props.responseList.colorPallete.find(o=> o === inputCommand);\r\n            if(matchingResult != null){\r\n                // raise color change event\r\n                this.onThemeChange(matchingResult);\r\n                Object.assign(rowData,{        \r\n                    type: \"generalResponse\",\r\n                    data: \"You've found an easter egg! Theme changed successfully!\"\r\n                });\r\n                return rowData;\r\n            }\r\n        }\r\n        \r\n        if(this.props.responseList.hasOwnProperty('error')){\r\n            Object.assign(rowData, {        \r\n                type: \"errorResponse\",\r\n                data: this.props.responseList['error'],\r\n            });\r\n        }\r\n        else{\r\n            Object.assign(rowData, {        \r\n                type: \"errorResponse\",\r\n                data: defaultErrorResponse,\r\n            });\r\n        }\r\n        return rowData;\r\n    }\r\n\r\n    onThemeChange(colorData){\r\n        let initialStyle = {\r\n            \"backgroundColor\": \"black\",\r\n            \"color\": colorData\r\n        };\r\n        this.setState({\r\n            customStyle: initialStyle\r\n        })\r\n    }\r\n\r\n    updatePrompt(rowData){\r\n        let updatedList = this.state.rowData;\r\n        updatedList.push(rowData);\r\n        let updatedPromptItemList = this.state.promptItemList;\r\n        updatedPromptItemList.push(this.createRowElement(rowData));\r\n        this.setState({\r\n            rowData: updatedList,\r\n            promptItemList: updatedPromptItemList\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        let initialPromptData = [];\r\n        if (this.props.responseList.disclaimer !=null){\r\n            initialPromptData.push({\r\n                type: \"disclaimer\",\r\n                data: this.props.responseList.disclaimer\r\n            });\r\n        }\r\n        let initialStyle = {\r\n            \"backgroundColor\": \"black\",\r\n            \"color\": \"green\"\r\n        };\r\n        if(this.props.responseList.defaultColor != null){\r\n            initialStyle.color = this.props.responseList.defaultColor;\r\n        }\r\n\r\n        this.setState({\r\n            rowData: initialPromptData,\r\n            promptItemList: initialPromptData.map((element) => this.createRowElement(element)),\r\n            customStyle: initialStyle\r\n        });\r\n\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.el != null){\r\n            this.el.scrollIntoView({ behaviour : 'smooth'});\r\n        }\r\n    }\r\n    createRowElement(element){\r\n        // I know index is not right for using key, but in my case I can live with it\r\n        if(element.type === \"generalResponse\" || element.type === \"errorResponse\"){\r\n            return <div key={element.id}\r\n                    ref={el=> {this.el = el;}} \r\n                    className=\"tr tr-general\">\r\n                    <div className=\"terminalCursor\"> {'>>'} </div>\r\n                    <div>\r\n                       {element.data} \r\n                    </div>\r\n            </div>\r\n        }\r\n        else if(element.type === \"disclaimer\"){\r\n            return <div key={element.id} className=\"tr tr-disclaimer\">{element.data}</div>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"terminal\" style={this.state.customStyle}>\r\n                <div className=\"terminalOutputArea\"  style={this.state.customStyle}>\r\n                    {this.state.promptItemList}\r\n                </div>\r\n                <div className=\"terminalInputArea\"  style={this.state.customStyle}>\r\n                    <div className=\"terminalCursor\"  style={this.state.customStyle}> {'>>'} </div>\r\n                    <input className=\"terminalInputBox\" onSubmit={this.onKeyDown}\r\n                    onKeyDown={this.onKeyDown} style={this.state.customStyle} autoFocus/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Terminal;","import './App.css';\nimport {Helmet} from \"react-helmet\";\nimport Terminal from './Terminal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCodepen, faGithub, faStackOverflow } from '@fortawesome/free-brands-svg-icons';\nimport { faExternalLinkAlt, faHome } from '@fortawesome/free-solid-svg-icons';\n\nlet responses = {\n  disclaimer: <div>Welcome to V-shell\n                  <div className=\"subDisclaimer\"><i>type help to know more</i></div>\n              </div>,\n  commandList:[\n    {\n      command: 'ls',\n      response: <div>about.sh \n                  <br/>links.sh\n                  </div>\n    },\n    {\n      command: './about.sh',\n      response: <div>\n                  <h1>Namaste, I'm Venkat</h1>\n                  <h3>A full-stack engineer interested in everything CS</h3>\n                </div>\n    },\n    {\n      command: './interests.sh',\n      response: <h1>coming soon...</h1>\n    },\n    {\n      command: './links.sh',\n      response: <div>\n                  <a href=\"https://github.com/venkatramanareddy\" target=\"_blank\" rel=\"noreferrer\">\n                    <FontAwesomeIcon icon={faGithub} className=\"linkIcons\" fixedWidth/>GitHub\n                    <FontAwesomeIcon icon={faExternalLinkAlt} className=\"linkIcons\" fixedWidth/>\n                  </a><br/>\n                  <a href=\"https://stackoverflow.com/users/5725669/venkat-ramana\" target=\"_blank\" rel=\"noreferrer\">\n                    <FontAwesomeIcon icon={faStackOverflow} className=\"linkIcons\" fixedWidth/>Stackoverflow\n                    <FontAwesomeIcon icon={faExternalLinkAlt} className=\"linkIcons\" fixedWidth/>\n                  </a><br/>\n                  <a href=\"https://codepen.io/venkatramanareddy\" target=\"_blank\" rel=\"noreferrer\" >\n                    <FontAwesomeIcon icon={faCodepen} className=\"linkIcons\" fixedWidth/>Codepen\n                    <FontAwesomeIcon icon={faExternalLinkAlt} className=\"linkIcons\" fixedWidth/>\n                  </a><br/>\n                  <a href=\"http://venkatramanareddy.github.io/\">\n                    <FontAwesomeIcon icon={faHome} className=\"linkIcons\" fixedWidth/>Homepage\n                  </a>\n                </div>\n    },\n    {\n      command: 'help',\n      response: <div>Here are some of the commands to try out\n                <ul>\n                  <li><b>ls</b> - for list of available commands</li>\n                  <li><b>./about.sh</b> - run a script :-)</li>\n                  <li><b>help</b> - to get back here</li>\n                </ul>\n                There are few hidden easter eggs too! Do drop a star on github repo if you liked this page!</div>\n    }\n  ],\n  colorPallete: [\"green\",\"blue\",\"maroon\",\"yellow\",\"aqua\",\"red\",\"beige\",\"violet\",\"orange\"],\n  defaultColor: \"crimson\",\n  error: <div>I'm not sure what info you've asked for. You can ask for help by typing help</div>\n}\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        {/* <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\"/> */}\n        <style>\n          @import url('https://fonts.googleapis.com/css2?family=Major+Mono+Display&display=swap');\n        </style>\n      </Helmet>\n      <Terminal className=\"terminal\"\n                responseList={responses}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}